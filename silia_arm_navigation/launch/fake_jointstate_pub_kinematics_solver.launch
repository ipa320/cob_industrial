<?xml version="1.0"?>
<launch>

<!-- YOU NEED TO CHANGE  silia  NAME TO POINT TO YOUR PACKAGES -->

    <!-- Load robot model into Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find cob_silia)/urdf/silia.urdf.xacro'" />

    <!-- Start Robot State Publisher (calculates joint frame transforms) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    <!-- Start Joint State Publisher with joint control GUI -->
    <param name="use_gui" value="true" />
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>

    <!-- Start Rviz visualization tool using saved config file -->
    <node name="rviz" pkg="rviz" type="rviz"/>

    <include file="$(find planning_environment)/launch/environment_server.launch">
        <arg name="use_monitor" value="true" />
        <arg name="use_collision_map" value="false" />
    </include>

    <!-- Load planning config from silia_arm_navigation package -->
    <rosparam command="load" ns="robot_description_planning" file="$(find silia_arm_navigation)/config/silia_planning_description.yaml" />

    <!-- Load arm_kinematics_constraint_aware node configured for your robot, using specific kinematics plugin -->
    <node pkg="arm_kinematics_constraint_aware" type="arm_kinematics_constraint_aware" name="silia_manipulator_kinematics" output="screen" >
        <param name="group" type="string" value="manipulator"/>
        <param name="manipulator/root_name" type="string" value="base_link"/>
        <param name="manipulator/tip_name" type="string" value="arm_6_link"/>

        <!-- KDL is the default plugin, however you can build an IKFast plugin -->
        <param name="kinematics_solver" type="string" value="arm_kinematics_constraint_aware/KDLArmKinematicsPlugin" />
        <!-- param name="kinematics_solver" type="string" value="silia_manipulator_kinematics/IKFastKinematicsPlugin" -->

   </node>

  <node name="interpolated_ik_node_right" pkg="interpolated_ik_motion_planner" 
    type="interpolated_ik_motion_planner.py" respawn="false" output="screen">
    <param name="robot_prefix" type="string" value="silia"/>
    <param name="consistent_angle" type="double" value="1.05"/>
    <param name="collision_aware_ik" type="int" value="0"/>
  </node>

</launch> 
